8_3_names.test.lua # Fully commented
aggerror.test.lua # waiting (uses sqlite3_create_aggregate)
aggnested.test.lua
alias.test.lua # waiting (built in functions)
altermalloc.test.lua # fully commented
alter1.test.lua # waiting for alter table #2349
alter2.test.lua # waiting for alter table #2349
alter3.test.lua # waiting for alter table #2349
alter4.test.lua # waiting for alter table #2349
amatch1.test.lua # fully commented (full text search)
analyze1.test.lua
analyze3.test.lua
analyze4.test.lua
analyze5.test.lua
analyze6.test.lua
analyze7.test.lua
analyze8.test.lua
analyze9.test.lua
analyzeA.test.lua
analyzeB.test.lua
analyzeC.test.lua
analyzeD.test.lua
analyzeE.test.lua
analyzeF.test.lua
analyzer1.test.lua
async1.test.lua         # Probably not necessqry?
async2.test.lua         # Probably not necessqry?
async3.test.lua         # Probably not necessqry?
async4.test.lua         # Probably not necessqry?
async5.test.lua         # Probably not necessqry?
attach1.test.lua        # Fully commented. ATTACH/DETACH are not supposed to be supported in trntl.
attach2.test.lua        # Fully commented. ATTACH/DETACH are not supposed to be supported in trntl.
attach3.test.lua        # Ditto.
attach4.test.lua        # Ditto.
attachmalloc.test.lua   # Ditto.
autoinc.test.lua        # Waiting autoincrement #2263
autoindex1.test.lua     # Waiting. Uses db status
autoindex2.test.lua     # Waiting. Uses sqlite_master #2244
autoindex3.test.lua     # Waiting. Uses sqlite_stat1 should it be it tarantool?
autoindex4.test.lua
autoindex5.test.lua
autovacuum.test.lua     # Functionality isn't related to trntl.
autovacuum_ioerr2.test.lua # Functionality isn't related to trntl.
avtrans.test.lua        # Functionality isn't related to trntl.
auth1.test.lua          # Fully commented. isn't related to tarantool?
auth2.test.lua          # Fully commented. isn't related to tarantool?
auth3.test.lua          # Fully commented. isn't related to tarantool?
backcompat.test.lua     # fully commented, unnecessqry?
backup1.test.lua        # Fully commented. Functionality isn't related to trntl.
backup2.test.lua        # Ditto.
backup4.test.lua        # Ditto.
backup5.test.lua        # Ditto.
backup_ioerr.test.lua   # Ditto.
backup_malloc.test.lua  # Ditto.
between.test.lua        # Waiting #2455 ( uses sqlite sort count)
bigfile1.test.lua       # Fully commented. trntl's SQL doesn't deal with files at all.
bigfile2.test.lua       # Ditto.
bind.test.lua # Waiting. Uses prepared statements
bindxfer.test.lua       # Waiting. Uses prepared statements
boundary1.test.lua      # Waiting for int 64 #2363 
boundary2.test.lua      # Waiting for int 64 #2363 
boundary3.test.lua      # Waiting for int 64 #2363 
btree01.test.lua        # Functionality isn't related to trntl. 
btree02.test.lua        # Functionality isn't related to trntl. 
btreefault.test.lua     # not related to tarantool
busy.test.lua           # Waiting for transactions. Should be rewritten.
cache.test.lua          # not related to tarantool?
capi1.test.lua          # Fully commented.
capi2.test.lua          # Fully commented.
capi3.test.lua          # Fully commented.
close.test.lua          # Not related to tarantool?
closure01.test.lua      # Not related to tarantool
collate1.test.lua       # Waiting for built-in pocedures
collate2.test.lua       # Waiting for built-in pocedures
collate3.test.lua       # Waiting for built-in pocedures
collate4.test.lua       # Waiting for built-in pocedures
collate5.test.lua       # Waiting for built-in pocedures
collate6.test.lua       # Fully commented
collate7.test.lua       # Fully commented
collate8.test.lua       # Fully commented
collate9.test.lua       # Fully commented
collateA.test.lua       # Fully commented
colmeta.test.lua        # Fully commented
conflict.test.lua       # Waiting for #2495
conflict2.test.lua      # Fully commented
conflict3.test.lua      # Fully commented
coveridxscan.test.lua   # Sohuld be rewritten. Relies on sqlite internall staff (like rowid)
createtab.test.lua      # not related to tarantool? uses autavacuum a lot
delete1.test.lua
delete3.test.lua
default.test.lua        # fully commented + contains int 64
delete.test.lua         # fully commented
delete2.test.lua        # fully commented
descidx1.test.lua       # fully commented
descidx2.test.lua       # fully commented
descidx3.test.lua       # fully commented
distinctagg.test.lua
e_changes.test.lua      # fully commented
e_insert.test.lua       # fully commented
e_fkey.test.lua         # fully commented
e_totalchanges.test.lua # Waiting. access to total_changes #2455
e_update.test.lua       # Fully commented
enc2.test.lua           # fully commented
enc3.test.lua           # not related to tarantool? uses utf16 
enc4.test.lua           # Waiting for prep statements + usus utf16 
eval.test.lua           # Waiting. Uses special built-in function test_eval
exec.test.lua           # not related to tarantool
func4.test.lua          # not related to tarantool? uses load_static_extension totype
func5.test.lua          # not related to tarantool? usus utf16
fuzz1.test.lua          # Ditto
fuzz2.test.lua          # Ditto
fuzz3.test.lua          # Ditto
fuzz-oss1.test.lua      # Waiting for autoincrement #2263
index3.test.lua
insert2.test.lua  # Waiting for access to count_changes #2455 
insert3.test.lua  # Waiting for pk autoincrement, or should be rewritten
insert4.test.lua  # Fully commented
insert5.test.lua  # Waiting for pk autoincrement
icu.test.lua # Fully commented
join2.test.lua # Ditto
join3.test.lua # Ditto
join5.test.lua # Ditto
join6.test.lua # Ditto
like.test.lua  # Waiting for #2455, uses sqlite_like_count a lot
like3.test.lua # Waiting for #1476 collate nocase
minmax.test.lua   # Waiting #2455, uses sqlite_search_count a lot
nan.test.lua      # Waiting. uses prepared statements a lot
numcast.test.lua  # not related to tarantool? usus utf16
orderby2.test.lua # Ditto
orderby3.test.lua # Ditto
orderby4.test.lua # Ditto
orderby5.test.lua # Ditto
orderby6.test.lua # Ditto
orderby7.test.lua # Not relevant. Test for FTS which is not picked into Tarantool.
ptrchng.test.lua  # Waiting. uses pointer_change func (remuved with test1.c)
quota-glob.test.lua # Not related to tarantool?? sqlite3_quota_glob was removed
regexp.test.lua     # Waiting? regexp extension not implemented
rollback.test.lua   # Fully commented, transactions are not implemented #2140
rollback2.test.lua  # Fully commented, transactions are not implemented #2140
rollbackfault.test.lua  # Fully commented, transactions are not implemented #2140
savepoint.test.lua  # Fully commented, transactions are not implemented #2140
savepoint1.test.lua # Fully commented, transactions are not implemented #2140
savepoint2.test.lua # Fully commented, transactions are not implemented #2140
savepoint3.test.lua # Fully commented, transactions are not implemented #2140
savepoint4.test.lua # Fully commented, transactions are not implemented #2140
savepoint5.test.lua # Fully commented, transactions are not implemented #2140
savepoint6.test.lua # Fully commented, transactions are not implemented #2140
savepoint7.test.lua # Fully commented, transactions are not implemented #2140
scanstatus.test.lua # Fully commented
select9.test.lua # Converted (waiting how silent mode)
selectD.test.lua # Empty (all lines commented)
selectG.test.lua # Converted (waiting for int 64 implementation)
# sidedelete Not working. Don't know what to do.
# Null not allowed in pk(2.), and UPDATE OR REPLACE works differently in tarantool(3.)
sidedelete.test.lua # see above
skipscan1.test.lua  # Fully commented
skipscan2.test.lua  # Fully commented
skipscan3.test.lua  # Fully commented
sort2.test.lua    # Fully commented, multi-threaded sorting works
sort3.test.lua    # Fully commented, sort huge arrays while mmap limit is 5mb
sort4.test.lua    # Fully commented, multi-threaded sorting works, prep stat
sort5.test.lua    # Fully commented, not related to tarantool
sortfault.test.lua    # Fully commented
speed1.test.lua   # Fully commented
speed2.test.lua   # Fully commented
speed3.test.lua   # Fully commented
speed4.test.lua   # Fully commented
speed4p.test.lua  # Fully commented
speed4pexplain.test.lua # Fully commented
subtupe1.test.lua # Waiting? Uses internal test_getsubtype (.c) func
temptable.test.lua    # Fully commented, waiting for implementation
temptrigger.test.lua  # Fully commented
tkt2213.test.lua # Ignored (test checks related to tcl features)
tkt2643.test.lua # Waiting Testing analyze feature and statistics. Should it be in tarantool?
tkt2251.test.lua # Converted(stored locally), but not workung. Depends on #2349
tkt3718.test.lua # Waiting for built-in procedures
tkt3824.test.lua # Waiting (test uses db status)
tkt3832.test.lua # Waiting for triggers implenentation
tkt3838.test.lua # Converted(stored locally), but not working Depends on #2349 (alter table) and UTF 16 #2295
tkt3892.test.lua # Waiting for int 64
tkt3922.test.lua # Waiting for int 64
tkt3992.test.lua # Converted(stored locally), but not working Depends on #2349 (alter table, triggers)
tkt3997.test.lua # Waiting for built-in procedures and collations
tkt-26ff0c2d1e.test.lua # Skip (do not know how to call prepared statement)
tkt-2a5629202f.test.lua # Waiting cksort (test uses db status) 
tkt-2ea2425d34.test.lua # Waiting UTF 16 #2295
tkt-3fe897352e.test.lua # Waiting UTF 16 #2295
tkt-4c86b126f2.test.lua
tkt-54844eea3f.test.lua
tkt-752e1646fc.test.lua
tkt-7bbfb7d442.test.lua # Converted, half of the test waits for triggers
tkt-8454a207b9.test.lua # Waiting for #2363 int64, #2349 alter table 
tkt-b72787b1.test.lua # Waiting for prepared statement implementation
tkt-f67b41381a.test.lua # Not converted (Waiting alter + Don't know how to convert)
tkt-f777251dc7a.test.lua # Waiting for build in functions
trigger2.test.lua # Fully commented
trigger6.test.lua # Need #2233 to be implemented
varint.test.lua   # not ralated to tarantool (testing btree, see test3.c, btree_varint_test)
where.test.lua    # waiting for #2455 (search_count)
where2.test.lua # Ditto
where3.test.lua # Ditto
where4.test.lua # Ditto
where5.test.lua # Ditto
where6.test.lua # Ditto
where8.test.lua # Need #2455
where9.test.lua # Ditto
whereB.test.lua # Ditto
whereC.test.lua # Ditto
whereD.test.lua # Ditto
whereE.test.lua # Fully commented
whereH.test.lua # Fully commented
whereJ.test.lua # Fully commented
wherelimit.test.lua # This sqlite option is turned off in tarantool 
